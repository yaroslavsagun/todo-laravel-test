{
    "swagger": "2.0",
    "info": {
        "title": "TODO API overview",
        "version": "v2"
    },
    "paths": {
        "/api/get-users": {
            "get": {
                "operationId": "getUsers",
                "summary": "List users (only for test purposes)",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "examples": {
                            "application/json": "{\n    \"users\": [\n        {\n            \"id\": 1,\n            \"name\": \"Giovanni Brekke\",\n            \"email\": \"hschumm@example.net\",\n            \"api_token\": \"8da42b21d2fe8a90cc3915fd391b1634\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Laron Wyman\",\n            \"email\": \"ryan.margaretta@example.org\",\n            \"api_token\": null\n        }]}"
                        }
                    }
                }
            }
        },
        "/api/generate-api-token": {
            "get": {
                "operationId": "generateApiToken",
                "summary": "Generate api token (only for test purposes)",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Get Token",
                        "examples": {
                            "application/json": "{\n    \"token\": \"fefb1d803fb89d3b10c8fe850c3416f9\"\n}"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "examples": {
                            "application/json": "{\n    \"message\": \"Email is empty or user with the specified email not found\"\n}"
                        }
                    }
                }
            }
        },
        "/api/tasks": {
            "post": {
                "operationId": "createTask",
                "summary": "Create a task",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "title",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "priority",
                        "in": "formData",
                        "required": true,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "parent_id",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Created successfully",
                        "examples": {
                            "application/json": "{\n    \"id\": 32,\n    \"userId\": 1,\n    \"parent_id\": 31,\n    \"title\": \"test title\",\n    \"description\": \"test description\",\n    \"status\": 0,\n    \"priority\": 3,\n    \"completedAt\": null,\n    \"createdAt\": \"2023-12-05 21:04:15\"\n}"
                        }
                    },
                    "400": {
                        "description": "400 Bad request",
                        "examples": {
                            "application/json": "{\n    \"message\": \"The priority field is required.\",\n    \"errors\": {\n        \"priority\": [\n            \"The priority field is required.\"\n        ]\n    }\n}"
                        }
                    }
                }
            }
        },
        "/api/tasks/{taskId}": {
            "post": {
                "operationId": "updateTask",
                "summary": "Update a task",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "title",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "priority",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    },
                    {
                        "name": "parent_id",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Updated successfully",
                        "examples": {
                            "application/json": "{\n    \"id\": 32,\n    \"userId\": 1,\n    \"parent_id\": 31,\n    \"title\": \"test title\",\n    \"description\": \"test description\",\n    \"status\": 0,\n    \"priority\": 3,\n    \"completedAt\": null,\n    \"createdAt\": \"2023-12-05 21:04:15\"\n}"
                        }
                    },
                    "400": {
                        "description": "400 Bad request",
                        "examples": {
                            "application/json": "{\n    \"message\": \"Task  with specified id does not exist\"\n}"
                        }
                    },
                    "401": {
                        "description": "401 Not Allowed",
                        "examples": {
                            "application/json": "{\n    \"message\": \"Task does not belong to the user\"\n}"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteTask",
                "summary": "Delete a task",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 deleted successfully",
                        "examples": {
                            "application/json": "{\n    \"message\": \"Successfully deleted\"\n}"
                        }
                    },
                    "400": {
                        "description": "400 Bad request",
                        "examples": {
                            "application/json": "{\n    \"message\": \"Task  with specified id does not exist\"\n}"
                        }
                    },
                    "401": {
                        "description": "401 Not Allowed",
                        "examples": {
                            "application/json": "{\n    \"message\": \"Task does not belong to the user\"\n}"
                        }
                    }
                }
            }
        },
        "/api/mark-task-done/{taskId}": {
            "get": {
                "operationId": "markTaskDone",
                "summary": "Mark task as done",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Updated successfully",
                        "examples": {
                            "application/json": "{\n    \"message\": \"Successfully marked\"\n}"
                        }
                    },
                    "400": {
                        "description": "400 Bad request",
                        "examples": {
                            "application/json": "{\n    \"message\": \"Can not mark task completed because it has uncompleted sub-tasks\"\n}"
                        }
                    },
                    "401": {
                        "description": "401 Not Allowed",
                        "examples": {
                            "application/json": "{\n    \"message\": \"Task does not belong to the user\"\n}"
                        }
                    }
                }
            }
        },
        "/api/get-filtered-tasks": {
            "post": {
                "operationId": "getFilteredTasks",
                "summary": "Get filtered tasks",
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "Filters",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Filters"
                        }
                    },
                    {
                        "in": "body",
                        "name": "sortBy",
                        "description": "Sort By",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortBy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Created successfully",
                        "examples": {
                            "application/json": "[\n    {\n        \"id\": 32,\n        \"user_id\": 1,\n        \"parent_id\": null,\n        \"title\": \"test title\",\n        \"description\": \"lalalalla allalal erfdsgt tr htrd\",\n        \"priority\": 3,\n        \"status\": 0,\n        \"completed_at\": null,\n        \"created_at\": \"2023-12-05T19:35:19.000000Z\",\n        \"updated_at\": \"2023-12-05T19:35:19.000000Z\",\n        \"children\": [\n            {\n                \"id\": 34,\n                \"user_id\": 1,\n                \"parent_id\": 32,\n                \"title\": \"test title\",\n                \"description\": \"lalalalla allalal erfdsgt tr htrd\",\n                \"priority\": 3,\n                \"status\": 0,\n                \"completed_at\": null,\n                \"created_at\": \"2023-12-05T19:35:20.000000Z\",\n                \"updated_at\": \"2023-12-05T19:35:20.000000Z\",\n                \"children\": []\n            },\n            {\n                \"id\": 35,\n                \"user_id\": 1,\n                \"parent_id\": 32,\n                \"title\": \"test title\",\n                \"description\": \"lalalalla allalal erfdsgt tr htrd\",\n                \"priority\": 3,\n                \"status\": 1,\n                \"completed_at\": null,\n                \"created_at\": \"2023-12-05T19:35:21.000000Z\",\n                \"updated_at\": \"2023-12-05T21:12:05.000000Z\",\n                \"children\": []\n            }\n        ]\n    }\n]"
                        }
                    }
                }
            }
        }
    },
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "testdescription gre"
        }
    },
    "definitions": {
        "Filters": {
            "properties": {
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "priority": {
                    "type": "integer",
                    "example": 3
                },
                "title": {
                    "type": "string",
                    "example": "Search term"
                },
                "description": {
                    "type": "string",
                    "example": "Search term"
                }
            }
        },
        "SortBy": {
            "properties": {
                "priority": {
                    "type": "string",
                    "example": "asc"
                },
                "created_at": {
                    "type": "string",
                    "example": "desc"
                },
                "completed_at": {
                    "type": "string",
                    "example": "asc"
                }
            }
        }
    }
}
